from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import os
import sys
import io
import telebot

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–æ–¥—É–≤–∞–Ω–Ω—è –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è –Ω–∞ –∫–æ–Ω—Å–æ–ª—å
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')


# Telegram bot setup
bot_token = "7835773967:AAF_wU4W3QVmKnqAOtxvpnPFM2RmODzkE4c"
user_id = 718260754
bot = telebot.TeleBot(bot_token)

def send_telegram_message(data):
    message = (
        "üéâ <b>–ù–æ–≤—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ —Å–ª–æ—Ç–∏ –¥–ª—è –∑–∞–ø–∏—Å—É! üéâ</b>\n\n"
        "<b>üóìÔ∏è –î–æ—Å—Ç—É–ø–Ω—ñ –¥–∞—Ç–∏ —Ç–∞ —á–∞—Å–∏:</b>\n"
    )
    for entry in data:
        message += f"{entry}\n"
    message += (
        "\nüí° <i>–ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ —Å–∫–æ—Ä—ñ—à–µ —Ç–∞ –±—Ä–æ–Ω—é–π—Ç–µ –∑—Ä—É—á–Ω–∏–π —á–∞—Å! </i>"
    )
    bot.send_message(user_id, message, parse_mode="HTML")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ–∑ —Ñ–∞–π–ª—É
def read_data_from_file(file_path):
    if os.path.exists(file_path):
        with open(file_path, "r", encoding="utf-8") as file:
            return [line.strip() for line in file.readlines()]
    return []

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Å—É –¥–∞–Ω–∏—Ö —É —Ñ–∞–π–ª
def write_data_to_file(file_path, data):
    with open(file_path, "w", encoding="utf-8") as file:
        for entry in data:
            file.write(entry + "\n")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±—Ä–∞—É–∑–µ—Ä–∞
options = Options()
options.add_argument("--start-maximized")
driver = webdriver.Chrome(options=options)
wait = WebDriverWait(driver, 10)

# URL –¥–ª—è –≤—Ö–æ–¥—É
url = "https://app.mindlyspace.com/auth"
driver.get(url)

try:
    # –í–∏–±—ñ—Ä –º–æ–≤–∏
    ukrainian_language_option = wait.until(
        EC.element_to_be_clickable((By.XPATH, "//div[contains(text(), '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞')]")
    ))
    ukrainian_language_option.click()

    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è (Login example)
    login_button = wait.until(
        EC.element_to_be_clickable((By.XPATH, "//div[text()='–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –∑ Email']")
    ))
    login_button.click()

    email_input = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "input[type='email']")))
    email_input.send_keys("romanov.andrus.michael@gmail.com")

    next_button = wait.until(
        EC.element_to_be_clickable((By.XPATH, "//div[text()='–î–∞–ª—ñ']")
    ))
    next_button.click()

    password_input = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "input[type='password']")))
    password_input.send_keys("P@ssword")

    login_submit = wait.until(
        EC.element_to_be_clickable((By.XPATH, "//div[contains(text(), '–£–≤—ñ–π—Ç–∏')]")
    ))
    login_submit.click()

    # –ù–∞—Ç–∏—Å–∫–∞—î–º–æ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ —Å–µ–∞–Ω—Å"
    book_session_button = wait.until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), '–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ —Å–µ–∞–Ω—Å')]")
    ))
    book_session_button.click()

    # –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    time.sleep(5)

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –¥–∞—Ç
    days_elements = wait.until(
        EC.presence_of_all_elements_located(
            (By.XPATH, "//ion-slide/button/span")
        )
    )

    available_dates = [el.text.strip() for el in days_elements]

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —á–∞—Å–æ–≤–∏—Ö —Å–ª–æ—Ç—ñ–≤ –¥–ª—è –∫–æ–∂–Ω–æ—ó –¥–∞—Ç–∏
    available_slots = []
    for date_element in days_elements[:7]:  # –û–±–º–µ–∂–µ–Ω–Ω—è –¥–æ 7 –¥–Ω—ñ–≤
        date_element.click()  # –ö–ª—ñ–∫ –ø–æ –¥–∞—Ç—ñ, —â–æ–± –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —á–∞—Å–∏
        time.sleep(1)
        slots_elements = wait.until(
            EC.presence_of_all_elements_located(
                (By.CLASS_NAME, "booking")
            )
        )
        slots = [slot.text.strip() for slot in slots_elements]
        available_slots.append({date_element.text.strip(): slots})

    # –§–æ—Ä–º—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –∑–∞–ø–∏—Å—É —É —Ñ–∞–π–ª
    combined_data = []
    for date, slots in zip(available_dates[:7], available_slots):  # –ü–µ—Ä—à—ñ 7 –¥–Ω—ñ–≤
        slots_str = ", ".join(slots[date]) if date in slots else "No slots"
        combined_data.append(f"{date}: {slots_str}")

    # –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö
    file_path = "text.txt"

    # –ß–∏—Ç–∞–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –¥–∞–Ω–∏—Ö —ñ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
    previous_data = read_data_from_file(file_path)

    if combined_data != previous_data:
        write_data_to_file(file_path, combined_data)
        send_telegram_message(combined_data)

finally:
    # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –±—Ä–∞—É–∑–µ—Ä
    driver.quit()
